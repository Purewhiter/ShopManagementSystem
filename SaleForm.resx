<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdXWgBXV1kAV1dZAFdXWQBWV1sBV1dZJFhVV2NZVFWmWVRV01hV
        VutYVVf4WFVX+FhVVutZVFXTWVRVplhVV2NXV1kkVldbAVdXWQBXV1kAV1dZAFdXWgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXV1kAV1dZAFdXWQBVV1sBV1dZM1hVVpJYVlfaUl9j+kVy
        e/83h5X/LZep/yifs/8on7P/LZep/zeHlf9Fcnv/Ul9j+lhWV9pYVVaSV1dZM1VXWwFXV1kAV1dZAFdX
        WQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFhaAFhYWgBXV1kAV1dZF1hWV4VXVljoSmty/y2W
        qP8Tvtr/BdP1/wDa/v8A3f//AN3//wDd//8A3f//ANr+/wXT9f8Tvtr/LZao/0prcv9XVljoWFZXhVdX
        WRdXV1kAWFhaAFhYWgAAAAAAAAAAAAAAAAAAAAAAAAAAAFdXWQBXV1kAV1dZAFdXWTFYVVe+UGFm/y6V
        p/8Lyur/ANz//wDd//8A3P//ANv//wDb//8A2///ANv//wDb//8A2///ANz//wDd//8A3P//C8rq/y6W
        qP9QYWb/WFVXvldXWTFXV1kAV1dZAFdXWQAAAAAAAAAAAAAAAABXV1kAVlZZAFdXWQBXV1k7WFVX1Udv
        d/8Yt9L/ANv//wDc//8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb
        //8A3P//ANv//xi30v9Hb3f/WFVX1VdXWTtXV1kAVlZYAFdXWQAAAAAAV1daAFdXWQBXV1kAV1dZMVhV
        V9VDdoD/D8Xj/wDd//8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb
        //8A2///ANv//wDb//8A2///AN3//w/F4/9DdoD/WFVX1VdXWTFXV1kAV1dZAFdXWgBXV1kAV1dZAFdX
        WRZYVVe9R293/w/F4/8A3f//ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb//8A3P//ANz//wDb
        //8A2///ANv//wDb//8A2///ANv//wDb//8A2///AN3//w/F4/9Hb3f/WFVXvVdXWRZXV1kAV1dZAFdX
        WQBUV1sBWFVXhFBhZv8Yt9L/AN3//wDb//8A2///ANv//wDb//8A2///ANv//wDb//8A2///Adr+/yGo
        v/8as8z/ANz//wDb//8A2///ANv//wDb//8A2///ANv//wDb//8A2///AN3//xi30f9QYWb/WFZXhFZZ
        XAFXV1kAV1dZAFdXWTNXVljnLpao/wDb//8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb
        //8D1/r/Q3V//zeHlf8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANv//y6V
        p/9XVljnV1dZM1dXWQBWVloBWFVWkkprcv8Lyur/ANz//wDb//8A2///ANv//wDb//8A2///ANv//wDb
        //8A2///ANv//wPW+f9DdX//OIeV/wDb//8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb
        //8A3P//C8rq/0prcv9YVVaSVVZaAVdXWSRYVlfaLZao/wDc//8A2///ANv//wDb//8A2///ANv//wDb
        //8A2///ANv//wDb//8A2///A9b5/0N1f/84h5X/ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb
        //8A2///ANv//wDb//8A3P//LZao/1hWV9pXV1kkWFVXY1JfY/oTvtr/AN3//wDb//8A2///ANv//wDb
        //8A2///ANz//wDc//8A2///ANv//wDc//8D1/r/Q3Z//zeHlf8A3P//ANv//wDb//8A2///ANz//wDc
        //8A2///ANv//wDb//8A2///ANv//wDd//8Tvtr/Ul9j+lhVV2NZVFWmRXJ7/wXT9f8A3P//ANv//wDb
        //8A2///ANv//wDb//8atM3/NIyb/zSMm/80jJv/NIyb/zWKmf9PY2j/Smpx/zSMm/80jJv/NIyb/zSM
        m/80jJv/GrTN/wDb//8A2///ANv//wDb//8A2///ANz//wXT9f9Fcnv/WVRVpllUVdM3h5X/ANr+/wDb
        //8A2///ANv//wDb//8A2///ANv//yWjuf9FcXr/RXJ7/0Vye/9Fcnv/RnF6/1NdYf9RYWX/RXJ7/0Vy
        e/9Fcnv/RXJ7/0Vxev8lo7n/ANv//wDb//8A2///ANv//wDb//8A2///ANr+/zeHlf9ZVFXTWFVW6y2X
        qf8A3f//ANv//wDb//8A2///ANv//wDb//8A2///Adr9/wTV+P8E1ff/BNX3/wTV+P8H0PL/RHR9/zmF
        kv8E1ff/BNX3/wTV9/8E1ff/BNX4/wHa/f8A2///ANv//wDb//8A2///ANv//wDb//8A3f//LZep/1hV
        VutYVVf4KJ+z/wDd//8A2///ANv//wDb//8A2///ANv//wDb//8C1/r/B9Dy/wfQ8v8H0PL/B9Hy/wrM
        7P9Fc3z/OoOQ/wfQ8v8H0PL/B9Dy/wfQ8v8H0PL/Atf6/wDb//8A2///ANv//wDb//8A2///ANv//wDd
        //8on7P/WFVX+FhVV/gon7P/AN3//wDb//8A2///ANv//wDb//8A2///ANv//ymdsv9Ka3L/SWxz/0ls
        c/9JbHP/SWx0/1RcX/9SX2P/SG11/0lsc/9JbHP/SWxz/0prcv8pnbL/ANv//wDb//8A2///ANv//wDb
        //8A2///AN3//yifs/9YVVf4WFVW6y2Xqf8A3f//ANv//wDb//8A2///ANv//wDb//8A2///FrrW/yua
        rf8rmq3/K5qu/y2Xqf9NZ23/Vllc/1dYWv9Hb3f/K5mt/yuarf8rmq3/K5qt/xa61v8A2///ANv//wDb
        //8A2///ANv//wDb//8A3f//LZep/1hVVutZVFXTN4eV/wDa/v8A2///ANv//wDb//8A2///ANv//wDb
        //8A3P//AN3//wDd//8A3v//IanB/1JfY/8smKv/NYua/09jaP8XuNP/AN///wDd//8A3f//ANz//wDb
        //8A2///ANv//wDb//8A2///ANv//wDa/v83h5X/WVRV01lUVaZFcnv/BdP1/wDc//8A2///ANv//wDb
        //8A2///ANv//wDb//8A2///AN3//xS82P9OZGn/OYSS/wPW+f8Izu//Q3aA/0hudv8NyOf/ANz//wDb
        //8A2///ANv//wDb//8A2///ANv//wDb//8A3P//BdP1/0Vye/9ZVFWmWFVXY1JfY/oTvtr/AN3//wDb
        //8A2///ANv//wDb//8A2///ANv//wDc//8KzOz/RXN8/0Zxef8Lyur/ANz//wDd//8Sv9z/TWZs/zuB
        jv8F1Pb/ANz//wDb//8A2///ANv//wDb//8A2///ANv//wDd//8Tvtr/Ul9j+lhVV2NXV1kkWFZX2i2W
        qP8A3P//ANv//wDb//8A2///ANv//wDb//8A3P//A9b5/zeIlv9PY2j/FrrV/wDd//8A2///ANv//wDc
        //8fq8P/U15h/yyYq/8B2v7/ANv//wDb//8A2///ANv//wDb//8A2///ANz//y2WqP9YVlfaV1dZJFZX
        WwFYVVaSSmty/wvK6v8A3P//ANv//wDb//8A2///ANv//wDb/v8on7P/U11h/ySlu/8A3P//ANv//wDb
        //8A2///ANv//wHZ/f8ulaf/Ul9i/x2ux/8A3P//ANv//wDb//8A2///ANv//wDc//8Lyur/Smty/1hV
        VpJWVloBV1dZAFdXWTNXVljoLpao/wDb//8A2///ANv//wDb//8A3f//E77b/1BhZv8yjp//Atj7/wDb
        //8A2///ANv//wDb//8A2///ANz//wbT9P89f4v/Smpx/wvK6v8A3P//ANv//wDb//8A2///ANv//y6V
        p/9XVljnV1dZM1dXWQBXV1kAVVdbAVhWV4VQYWb/GLfS/wDd//8A2///ANv//wDc//8OxuX/Kpuu/wjP
        8P8A3P//ANv//wDb//8A2///ANv//wDb//8A2///ANz//w3H5v8qm67/CM/v/wDc//8A2///ANv//wDd
        //8Yt9L/UGFm/1hWV4RWWVwBV1dZAFdXWQBXV1kAV1dZF1hVV75Hb3f/D8Xj/wDd//8A2///ANv//wDc
        //8A3P//ANz//wDb//8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANz//wDc//8A2///ANv//wDb
        //8A3f//D8Xj/0dvd/9YVVe9V1dZFldXWQBXV1kAV1daAFdXWQBXV1kAV1dZMVhVV9VDdoD/D8Xj/wDd
        //8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb
        //8A2///AN3//w/F4/9DdoD/WFVX1VdXWTFXV1kAV1dZAFdXWgAAAAAAV1dZAFhYWgBXV1kAV1dZO1hV
        V9VHb3f/GLfS/wDb//8A3P//ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb//8A2///ANv//wDb
        //8A2///ANz//wDb//8Yt9L/R293/1hVV9VXV1k7V1dZAFZWWABXV1kAAAAAAAAAAAAAAAAAWFhaAFdX
        WQBXV1kAV1dZMVhVV71QYWb/LpWn/wvK6v8A3P//AN3//wDc//8A2///ANv//wDb//8A2///ANv//wDb
        //8A3P//AN3//wDc//8Lyur/Lpao/1BhZv9YVVe+V1dZMVdXWQBXV1kAV1dZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAV1dZAFZWWQBXV1kAV1dZFlhVV4RXVljnSmty/y2WqP8Tvtr/BdP1/wDa/v8A3f//AN3//wDd
        //8A3f//ANr+/wXT9f8Tvtr/LZao/0prcv9XVljoWFZXhVdXWRdXV1kAWFhaAFhYWgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAV1dZAFdXWQBXV1kAVFdbAVdXWTNYVVaSWFZX2lJfY/pFcnv/N4eV/y2X
        qf8on7P/KJ+z/y2Xqf83h5X/RXJ7/1JfY/pYVlfaWFVWkldXWTNVV1sBV1dZAFdXWQBXV1kAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV1daAFdXWQBXV1kAV1dZAFZWWgFXV1kkWFVXY1lU
        VaZZVFXTWFVW61hVV/hYVVf4WFVW61lUVdNZVFWmWFVXY1dXWSRWV1sBV1dZAFdXWQBXV1kAV1daAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+AAAH/AAAA/gAAAHwAAAA4AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgAAAAcAAAAPgAAAH8AAAD/gAAB8=
</value>
  </data>
</root>